import {showTime} from './time.js';
import getWeather from './wether.js';
import settings from './settings.js';
import getRandomQuote from './quote.js';
import {playAudio} from './audio.js';
import {addBackgroundImageFromGitHub, minSliderIndex, maxSliderIndex} from './slider.js';
import flickr from './flickrAPI.js';
import unsplash from './unsplashAPI.js';
import {changeLanguage} from './language.js';
import toDo from './toDoList.js';

const playBtn = document.querySelector('.play');
const city = document.querySelector('.city');
const userName = document.querySelector('.name');

if (localStorage.getItem('name')) userName.value = localStorage.getItem('name');
if (localStorage.getItem('city')) city.value = localStorage.getItem('city');
if (localStorage.getItem('selectedLanguage') === '' || localStorage.getItem('selectedLanguage') === null) localStorage.setItem('selectedLanguage', 'eng');

let currentTimeOfDay = showTime();
if (localStorage.getItem('selectedTag') === '' || localStorage.getItem('selectedTag') === null) localStorage.setItem('selectedTag', currentTimeOfDay);
let tag = localStorage.getItem('selectedTag');

toDo();
changeLanguage();
settings();

/* Time */

showTime();

/* Slider */

if (localStorage.getItem('selectedPictureAPI') === 'Unsplash') {
    unsplash(tag);
} else if (localStorage.getItem('selectedPictureAPI') === 'Flickr') {
    flickr(tag);
} else addBackgroundImageFromGitHub(minSliderIndex, maxSliderIndex);

/* Wether */

if (localStorage.getItem('city') === '' || localStorage.getItem('city') === null) {
    getWeather('Minsk');
    city.value = 'Minsk';
} else getWeather(city.value);

/* Random quote */

getRandomQuote();

/* Audio  */

playBtn.addEventListener('click', playAudio);

city.addEventListener ( 'change', e => {
    city.textContent = e.target.value;
    localStorage.setItem('city', city.value);
    getWeather(city.value);
});

userName.addEventListener ( 'change', e => {
    userName.textContent = e.target.value;
    localStorage.setItem('name', userName.value);
});

console.log(`
Ваша оценка - 160 баллов 
Отзыв по пунктам ТЗ:
Выполненные пункты:
1) время выводится в 24-часовом формате, например: 21:01:00 +5
2) время обновляется каждую секунду - часы идут. Когда меняется одна из цифр, остальные при этом не меняют своё положение на странице (время не дёргается) +5
3) выводится день недели, число, месяц, например: "Воскресенье, 16 мая" / "Sunday, May 16" +5
4) текст приветствия меняется в зависимости от времени суток (утро, день, вечер, ночь). Проверяется соответствие приветствия текущему времени суток +5
5) пользователь может ввести своё имя. При перезагрузке страницы приложения имя пользователя сохраняется +5
6) ссылка на фоновое изображение формируется с учётом времени суток и случайного номера изображения (от 01 до 20). Проверяем, что при перезагрузке страницы фоновое изображение изменилось. Если не изменилось, перезагружаем страницу ещё раз +5
7) изображения можно перелистывать кликами по стрелкам, расположенным по бокам экрана.Изображения перелистываются последовательно - после 18 изображения идёт 19 (клик по правой стрелке), перед 18 изображением идёт 17 (клик по левой стрелке) +5
8) изображения перелистываются по кругу: после двадцатого изображения идёт первое (клик по правой стрелке), перед 1 изображением идёт 20 (клик по левой стрелке) +5
9) при смене слайдов важно обеспечить плавную смену фоновых изображений. Не должно быть состояний, когда пользователь видит частично загрузившееся изображение или страницу без фонового изображения. +5
10) при перезагрузке страницы приложения указанный пользователем город сохраняется, данные о нём хранятся в local storage +5
11) для указанного пользователем населённого пункта выводятся данные о погоде, если их возвращает API. Данные о погоде включают в себя: иконку погоды, описание погоды, температуру в °C, скорость ветра в м/с, относительную влажность воздуха в %. Числовые параметры погоды округляются до целых чисел  +5
12) выводится уведомление об ошибке при вводе некорректных значений, для которых API не возвращает погоду (пустая строка или бессмысленный набор символов) +5
13) при загрузке страницы приложения отображается рандомная цитата и её автор +5
14) при перезагрузке страницы цитата обновляется (заменяется на другую). Есть кнопка, при клике по которой цитата обновляется (заменяется на другую) +5
15) при клике по кнопке Play/Pause проигрывается первый трек из блока play-list, иконка кнопки меняется на Pause +3
16) при клике по кнопке Play/Pause во время проигрывания трека, останавливается проигрывание трека, иконка кнопки меняется на Play +3
17) треки пролистываются по кругу - после последнего идёт первый (клик по кнопке Play-next), перед первым - последний (клик по кнопке Play-prev) +3
18) трек, который в данный момент проигрывается, в блоке Play-list выделяется стилем +3
19) после окончания проигрывания первого трека, автоматически запускается проигрывание следующего. Треки проигрываются по кругу: после последнего снова проигрывается первый. +3
20) добавлен прогресс-бар в котором отображается прогресс проигрывания +3
21) при перемещении ползунка прогресс-бара меняется текущее время воспроизведения трека +3
22) над прогресс-баром отображается название трека +3
23) отображается текущее и общее время воспроизведения трека +3
24) есть кнопка звука при клике по которой можно включить/отключить звук +2
25) добавлен регулятор громкости, при перемещении ползунка регулятора громкости меняется громкость проигрывания звука +3
26) можно запустить и остановить проигрывания трека кликом по кнопке Play/Pause рядом с ним в плейлисте +3
27) переводится язык и меняется формат отображения даты +3
28) переводится приветствие и placeholder +3
29) переводится прогноз погоды в т.ч описание погоды и город по умолчанию +3
30) переводится цитата дня т.е цитата отображается на текущем языке приложения. Сама цитата может быть другая +3
31) переводятся настройки приложения, при переключении языка приложения в настройках, язык настроек тоже меняется +3 
32) в качестве источника изображений может использоваться Unsplash API +5 (Есть ограничение на изменение 50 в час)
33) в качестве источника изображений может использоваться Flickr API +5 (Загружаться может в течении нескольких секунд)
34) в настройках приложения можно указать язык приложения (eng / ru)  +3
35) в настройках приложения можно указать источник получения фото для фонового изображения: коллекция изображений GitHub, Unsplash API, Flickr API +3
36) если источником получения фото указан API, в настройках приложения можно указать тег/теги, для которых API будет присылает фото +3
37) в настройках приложения можно скрыть/отобразить любой из блоков, которые находятся на странице:  +3
38) Скрытие и отображение блоков происходит плавно, не влияя на другие элементы +3
39) настройки приложения сохраняются при перезагрузке страницы +5
40) ToDo List - список дел +10 (Белая кнопка со стрелкой в левом углу. Можно добавлять и удалять задачи. При перезагрузке неудаленные задачи не пропадают.)
`);